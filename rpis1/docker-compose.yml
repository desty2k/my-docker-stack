secrets:
  authelia_jwt_secret:
    file: $SECRETS/authelia_jwt_secret
  authelia_session_secret:
    file: $SECRETS/authelia_session_secret
  authelia_storage_mysql_password:
    file: $SECRETS/authelia_storage_mysql_password
  authelia_storage_redis_password:
    file: $SECRETS/authelia_storage_redis_password
#  authelia_notifier_smtp_password:
#    file: $SECRETS/authelia_notifier_smtp_password
  authelia_duo_api_secret_key:
    file: $SECRETS/authelia_duo_api_secret_key
  traefik_pilot_token:
    file: $SECRETS/traefik_pilot_token
  mysql_root_password:
    file: $SECRETS/mysql_root_password
  my_email:
    file: $SECRETS/my_email

# After changing network settings use 'docker compose up -d --force-recreate' to avoid `network ... not found` errors.
networks:
  default:
    name: internal
    driver: bridge
    ipam:
      config:
        - subnet: 172.10.0.0/16
          gateway: 172.10.0.1
  vpn:
    name: vpn
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.0.0/24

services:

  ############################# EXPOSING SERVICES / CONNECTION
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    volumes:
      - $APPDATA/traefik2/rules:/rules
      - $APPDATA/traefik2/acme:/acme
      - $APPDATA/traefik2/logs:/logs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "443:443"
      - "8070:8080"
    environment:
      TZ: $TZ
      # https://doc.traefik.io/traefik/reference/static-configuration/env/
      TRAEFIK_PILOT_TOKEN: $TRAEFIK_PILOT_TOKEN
      TRAEFIK_LOG_LEVEL: DEBUG
      TRAEFIK_ACCESSLOG: true
      TRAEFIK_ACCESSLOG_BUFFERINGSIZE: 100
      TRAEFIK_ACCESSLOG_FILEPATH: /logs/traefik.log
      TRAEFIK_API: true
      TRAEFIK_API_INSECURE: true
      TRAEFIK_API_DASHBOARD: true

      TRAEFIK_PROVIDERS_DOCKER: true
      TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT: false
      TRAEFIK_PROVIDERS_FILE_DIRECTORY: /rules

      TRAEFIK_CERTIFICATESRESOLVERS_letsencrypt: true
      TRAEFIK_CERTIFICATESRESOLVERS_letsencrypt_ACME_EMAIL: $MY_EMAIL
      TRAEFIK_CERTIFICATESRESOLVERS_letsencrypt_ACME_STORAGE: /acme/acme.json
      TRAEFIK_CERTIFICATESRESOLVERS_letsencrypt_ACME_TLSCHALLENGE: true

      TRAEFIK_ENTRYPOINTS_websecure: true
      TRAEFIK_ENTRYPOINTS_websecure_ADDRESS: :443
      TRAEFIK_ENTRYPOINTS_websecure_HTTP_TLS: true
      TRAEFIK_ENTRYPOINTS_websecure_HTTP_TLS_CERTRESOLVER: letsencrypt
    #      TRAEFIK_ENTRYPOINTS_websecure_HTTP_TLS_DOMAINS_0_MAIN: $DOMAINNAME
    #      TRAEFIK_ENTRYPOINTS_websecure_HTTP_TLS_DOMAINS_0_SANS: "*.$DOMAINNAME"

    labels:
      traefik.enable: true
      traefik.http.services.traefik-svc.loadbalancer.server.port: 8080
      traefik.http.routers.traefik-rtr.service: traefik-svc
      traefik.http.routers.traefik-rtr.rule: Host(`traefik.$DOMAINNAME`)
      traefik.http.routers.traefik-rtr.entrypoints: websecure
      traefik.http.routers.traefik-rtr.middlewares: chain-authelia@file
    networks:
      default:
        ipv4_address: 172.10.0.200

  authelia:
    image: authelia/authelia
    container_name: authelia
    volumes:
      - $APPDATA/authelia:/config
    labels:
      traefik.enable: true
      traefik.http.routers.authelia-rtr.rule: Host(`login.$DOMAINNAME`)
      traefik.http.routers.authelia-rtr.entrypoints: websecure
      traefik.http.routers.authelia-rtr.middlewares: chain-authelia@file

      traefik.http.routers.authelia-rtr.service: authelia-svc
      traefik.http.services.authelia-svc.loadbalancer.server.port: 9091
    ports:
      - "9091:9091"
    environment:
      TZ: $TZ
      AUTHELIA_JWT_SECRET_FILE: /run/secrets/authelia_jwt_secret
      AUTHELIA_SESSION_SECRET_FILE: /run/secrets/authelia_session_secret
      AUTHELIA_STORAGE_MYSQL_PASSWORD_FILE: /run/secrets/authelia_storage_mysql_password
      AUTHELIA_SESSION_REDIS_PASSWORD_FILE: /run/secrets/authelia_storage_redis_password
      # AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE: /run/secrets/authelia_notifier_smtp_password
      AUTHELIA_DUO_API_SECRET_KEY_FILE: /run/secrets/authelia_duo_api_secret_key
    secrets:
      - authelia_jwt_secret
      - authelia_session_secret
      - mysql_root_password
      - authelia_storage_mysql_password
      - authelia_storage_redis_password
      # - authelia_notifier_smtp_password
      - authelia_duo_api_secret_key
    restart: unless-stopped

  # Wireguard Site-to-Site connection
  wireguard-sts:
    image: linuxserver/wireguard:latest
    container_name: wireguard-sts
    environment:
      TZ: $TZ
    volumes:
      - $APPDATA/wireguard-sts:/config
    ports:
      - "61920:51820/udp"
      - "61921:51821/tcp"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      net.ipv4.ip_forward: 1
      net.ipv4.conf.all.src_valid_mark: 1
    restart: unless-stopped
    networks:
      default:
        ipv4_address: 172.10.0.100

  # Wireguard for connecting from remote devicese
  wg-easy:
    image: weejewel/wg-easy
    container_name: wg-easy
    depends_on: [ unbound, pihole ]
    environment:
      WG_HOST: wireguard.$DOMAINNAME
      PASSWORD: $WGEASY_PASSWORD
      WG_PORT: 51920
      WG_DEFAULT_ADDRESS: 10.6.0.x
      WG_DEFAULT_DNS: 10.10.0.100
      WG_ALLOWED_IPS: 192.168.10.0/24, 192.168.20.0/24, 10.10.0.0/24
    volumes:
      - $APPDATA/wg-easy/:/etc/wireguard
    ports:
      - "51920:51820/udp"
      - "51821:51821/tcp"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      net.ipv4.ip_forward: 1
      net.ipv4.conf.all.src_valid_mark: 1
    dns:
      - 10.10.0.100 # Points to pihole
      - 10.10.0.200 # Points to unbound
    restart: unless-stopped
    networks:
      vpn:
        ipv4_address: 10.10.0.4
    labels:
      traefik.enable: true
      traefik.udp.routers.wg-easy.entrypoints: wg-easy
      traefik.udp.routers.wg-easy.service: wg-easy-service
      traefik.udp.services.wg-easy-service.loadbalancer.server.port: 51920


  ############################# DATABASES
  # Redis - Key-value Store
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    command: [ "bash", "-c",
               'docker-entrypoint.sh --appendonly yes --requirepass "$$(cat $$AUTHELIA_SESSION_REDIS_PASSWORD_FILE)" --maxmemory 512mb --maxmemory-policy allkeys-lru' ]
    ports:
      - "6379:6379"
    security_opt:
      - no-new-privileges:true
    secrets:
      - authelia_storage_redis_password
    environment:
      TZ: $TZ
      AUTHELIA_SESSION_REDIS_PASSWORD_FILE: /run/secrets/authelia_storage_redis_password
    volumes:
      - $APPDATA/redis/data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

  # MariaDB - SQL relational database
  mariadb:
    image: linuxserver/mariadb:latest
    container_name: mariadb
    restart: unless-stopped
    ports:
      - "3306:3306"
    volumes:
      - $APPDATA/mariadb/config:/config
      - $APPDATA/mariadb/mysql:/var/lib/mysql
    environment:
      TZ: $TZ
      FILE__MYSQL_ROOT_PASSWORD: /run/secrets/mysql_root_password  # Note FILE__ (double underscore)
    secrets:
      - mysql_root_password

  phpmyadmin:
    image: arm64v8/phpmyadmin:latest
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - "8010:80"
    environment:
      TZ: $TZ
      # PMA_ARBITRARY: 1
      PMA_HOST: $SERVER_IP
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
    secrets:
      - mysql_root_password
    depends_on:
      - mariadb
    labels:
      traefik.enable: true
      traefik.http.routers.phpmyadmin-rtr.service: phpmyadmin-svc
      traefik.http.services.phpmyadmin-svc.loadbalancer.server.port: 80
      traefik.http.routers.phpmyadmin-rtr.rule: Host(`phpmyadmin.$DOMAINNAME`)
      traefik.http.routers.phpmyadmin-rtr.entrypoints: websecure
      traefik.http.routers.phpmyadmin-rtr.middlewares: chain-authelia@file

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    restart: unless-stopped
    ports:
      - "8086:8086"
    volumes:
      - $APPDATA/influxdb/:/root/.influxdbv2
    environment:
      TZ: $TZ
    labels:
      traefik.enable: true
      traefik.http.services.influxdb-svc.loadbalancer.server.port: 8086
      traefik.http.routers.influxdb-rtr.rule: Host(`influxdb.$DOMAINNAME`)
      traefik.http.routers.influxdb-rtr.entrypoints: websecure
      traefik.http.routers.influxdb-rtr.service: influxdb-svc
      traefik.http.routers.influxdb-rtr.middlewares: chain-authelia@file

  # Bitwarden - password manager
  bitwarden:
    image: bitwardenrs/server:latest
    container_name: bitwarden
    ports:
      - "8050:80"
    volumes:
      - $APPDATA/bitwarden:/data
    labels:
      traefik.enable: true
      traefik.http.services.bitwarden.loadbalancer.server.port: 80
      traefik.http.routers.bitwarden.rule: Host(`bitwarden.$DOMAINNAME`)
      traefik.http.routers.bitwarden.entrypoints: websecure
      traefik.http.routers.bitwarden.middlewares: chain-authelia@file
    environment:
      TZ: $TZ
    restart: unless-stopped


  ############################# DNS SERVERS
  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    depends_on: [unbound]
    restart: unless-stopped
    hostname: pihole
    dns:
      - 10.10.0.200 # Points to unbound
      - 9.9.9.9
    environment:
      TZ: $TZ
      WEBPASSWORD: "" # Password - can be changed later
      ServerIP: $SERVER_IP # Internal IP of pihole
      DNS1: 10.10.0.200 # Unbound IP
      DNS2: 10.10.0.200 # If we don't specify two, it will auto pick google.
      DBINTERVAL: 60
      MAXDBDAYS: 7
    # Volumes store your data between container upgrades
    volumes:
      - $APPDATA/pihole/pihole/:/etc/pihole/
      - $APPDATA/pihole/dnsmasq.d/:/etc/dnsmasq.d/
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
    networks:
      default:
        ipv4_address: $PIHOLE_INTERNAL_IP
      vpn:
        ipv4_address: 10.10.0.100

  unbound:
    image: mvance/unbound-rpi:latest
    container_name: unbound
    restart: unless-stopped
    volumes:
      - $APPDATA/unbound:/opt/unbound/etc/unbound/
    environment:
      TZ: $TZ
    networks:
      vpn:
        ipv4_address: 10.10.0.200


  ############################# CONTAINER MANAGEMENT
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $APPDATA/portainer:/data
    environment:
      TZ: $TZ
    labels:
      traefik.enable: true
      traefik.http.services.portainer-svc.loadbalancer.server.port: 9000
      traefik.http.routers.portainer-rtr.service: portainer-svc
      traefik.http.routers.portainer-rtr.rule: Host(`portainer.$DOMAINNAME`)
      traefik.http.routers.portainer-rtr.entrypoints: websecure
      traefik.http.routers.portainer-rtr.middlewares: chain-authelia@file

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "0 0 3 * * *" --cleanup
    environment:
      TZ: $TZ


  ############################# SMART HOME
  homeassistant:
    image: homeassistant/raspberrypi4-homeassistant:stable
    container_name: home-assistant
    volumes:
      - $APPDATA/homeassistant:/config
    environment:
      TZ: $TZ
    restart: always
    ports:
      - "8123:8123"
    labels:
      traefik.enable: true
      traefik.http.services.ha-svc.loadbalancer.server.port: 8123
      traefik.http.routers.ha-rtr.rule: Host(`homeassistant.$DOMAINNAME`)
      traefik.http.routers.ha-rtr.entrypoints: websecure
      traefik.http.routers.ha-rtr.service: ha-svc
      traefik.http.routers.ha-rtr.middlewares: chain-authelia@file
    privileged: true

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - $APPDATA/mosquitto/config:/mosquitto/config
      - $APPDATA/mosquitto/data:/mosquitto/data
      - $APPDATA/mosquitto/log:/mosquitto/log
    environment:
      TZ: $TZ
    restart: unless-stopped

  tasmoadmin:
    image: raymondmm/tasmoadmin
    container_name: tasmoadmin
    profiles:
      - tasmota
    ports:
      - "8020:80"
    volumes:
      - $APPDATA/tasmoadmin:/data
    environment:
      TZ: $TZ
    restart: unless-stopped

  tasmobackup:
    image: danmed/tasmobackupv1
    container_name: tasmobackup
    profiles:
      - tasmota
    depends_on:
      - mariadb
    ports:
      - "8030:80"
    volumes:
      - $APPDATA/tasmobackup:/var/www/html/data
    environment:
      TZ: $TZ
      DBTYPE: mysql
      DBNAME: tasmobackup
      MYSQL_SERVER: $SERVER_IP
      MYSQL_USERNAME: tasmobackup
      MYSQL_PASSWORD: $MARIADB_TASMOBACKUP_PASSWORD
#      DBTYPE: sqlite
#      DBNAME: data/tasmobackup
    restart: unless-stopped

  zwavejs2mqtt:
    container_name: zwavejs2mqtt
    image: zwavejs/zwavejs2mqtt:latest
    restart: unless-stopped
    tty: true
    stop_signal: SIGINT
    environment:
      TZ: $TZ
    devices:
      - /dev/ttyACM0:/dev/zwave
    volumes:
      - $APPDATA/zwavejs2mqtt/:/usr/src/app/store
    ports:
      - "8091:8091"
      - "3000:3000"
    labels:
      traefik.enable: true
      traefik.http.services.bitwarden.loadbalancer.server.port: 8091
      traefik.http.routers.bitwarden.rule: Host(`zwavejs.$DOMAINNAME`)
      traefik.http.routers.bitwarden.entrypoints: websecure
      traefik.http.routers.bitwarden.middlewares: chain-authelia@file

  noisy-mqtt:
    container_name: noisy-mqtt
    image: desty2k/noisy-mqtt:latest
    restart: "no"
    environment:
      HOST: $SERVER_IP
      USERNAME: $MQTT_USERNAME
      PASSWORD: $MQTT_PASSWORD
      TZ: $TZ


  ############################# TELEMETRY AND MONITORING
  telegraf:
    image: telegraf:latest
    container_name: telegraf
    user: telegraf:995
    ports:
      - "8092:8092"
      - "8094:8094"
      - "8125:8125"
    devices:
      - /dev/vchiq
    volumes:
      - $APPDATA/telegraf/:/etc/telegraf/
      - /:/hostfs:ro
      - /opt/vc:/opt/vc
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      TZ: $TZ
      HOST_ETC: /hostfs/etc
      HOST_PROC: /hostfs/proc
      HOST_SYS: /hostfs/sys
      HOST_VAR: /hostfs/var
      HOST_RUN: /hostfs/run
      HOST_MOUNT_PREFIX: /hostfs
      LD_LIBRARY_PATH: /opt/vc/lib
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - $APPDATA/grafana:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: -/B@rtek40/-?
      GF_USERS_ALLOW_SIGN_UP: "false"
      TZ: $TZ
    ports:
      - "4000:3000"
    labels:
      traefik.enable: true
      traefik.http.services.grafana-svc.loadbalancer.server.port: 3000
      traefik.http.routers.grafana-rtr.rule: Host(`grafana.$DOMAINNAME`)
      traefik.http.routers.grafana-rtr.entrypoints: websecure
      traefik.http.routers.grafana-rtr.service: grafana-svc
      traefik.http.routers.grafana-rtr.middlewares: chain-authelia@file


  ############################# WWW SERVICES
  homer:
    image: b4bz/homer:latest
    container_name: homer
    volumes:
      - $APPDATA/homer:/www/assets
    ports:
      - "8080:8080"
    environment:
      TZ: $TZ
    labels:
      traefik.enable: true
      traefik.http.services.homer-svc.loadbalancer.server.port: 8080
      traefik.http.routers.homer-rtr.service: homer-svc
      traefik.http.routers.homer-rtr.rule: Host(`home.$DOMAINNAME`)
      traefik.http.routers.homer-rtr.entrypoints: websecure
      traefik.http.routers.homer-rtr.middlewares: chain-authelia@file
    restart: unless-stopped

  website:
    image: nginx
    container_name: nginx
    profiles:
      - website
    volumes:
      - $APPDATA/nginx/templates:/etc/nginx/templates
      - $APPDATA/nginx/www/blog/_site/:/usr/share/nginx/html/
    environment:
      NGINX_HOST: $DOMAINNAME
      NGINX_PORT: 80
      TZ: $TZ
    labels:
      traefik.enable: true
      traefik.http.services.nginx-svc.loadbalancer.server.port: 80
      traefik.http.routers.nginx-rtr.rule: Host(`$DOMAINNAME`)
      traefik.http.routers.nginx-rtr.entrypoints: websecure
      traefik.http.routers.nginx-rtr.service: nginx-svc
      traefik.http.routers.grafana-rtr.middlewares: chain-no-auth@file
    ports:
      - "80:80"

  whoami:
    image: traefik/whoami
    container_name: whoami
    labels:
      traefik.enable: true
      traefik.http.routers.whoami-rtr.entrypoints: websecure
      traefik.http.routers.whoami-rtr.rule: Host(`whoami.$DOMAINNAME`)
      traefik.http.services.whoami-svc.loadbalancer.server.port: 80
      traefik.http.routers.phpmyadmin-rtr.middlewares: chain-authelia@file
    ports:
      - "9010:80"
    environment:
      TZ: $TZ
    restart: unless-stopped
