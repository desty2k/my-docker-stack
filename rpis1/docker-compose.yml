secrets:
  authelia_storage_encryption_key:
    file: $SECRETS/authelia_storage_encryption_key
  authelia_jwt_secret:
    file: $SECRETS/authelia_jwt_secret
  authelia_session_secret:
    file: $SECRETS/authelia_session_secret
  authelia_ldap_password:
    file: $SECRETS/authelia_ldap_password
  authelia_storage_mysql_password:
    file: $SECRETS/authelia_storage_mysql_password
  authelia_storage_redis_password:
    file: $SECRETS/authelia_storage_redis_password
#  authelia_notifier_smtp_password:
#    file: $SECRETS/authelia_notifier_smtp_password
  authelia_duo_api_secret_key:
    file: $SECRETS/authelia_duo_api_secret_key
  traefik_pilot_token:
    file: $SECRETS/traefik_pilot_token
  mysql_root_password:
    file: $SECRETS/mysql_root_password
  my_email:
    file: $SECRETS/my_email
  duckdns_token:
    file: $SECRETS/duckdns_token

# After changing network settings use 'docker compose up -d --force-recreate' to avoid `network ... not found` errors.
networks:
  default:
    name: internal
    driver: bridge
    ipam:
      config:
        - subnet: 172.10.0.0/16
          gateway: 172.10.0.1
  vpn:
    name: vpn
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.0.0/24

services:

  ############################# EXPOSING SERVICES / CONNECTION
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8070:8080"
    volumes:
      - $APPDATA/traefik2/rules:/rules
      - $APPDATA/traefik2/acme:/acme
      - $APPDATA/traefik2/logs:/logs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      TZ: $TZ
      DUCKDNS_TOKEN_FILE: /run/secrets/duckdns_token
      # https://doc.traefik.io/traefik/reference/static-configuration/env/
      TRAEFIK_PILOT_TOKEN: $TRAEFIK_PILOT_TOKEN
      TRAEFIK_LOG_LEVEL: INFO
      TRAEFIK_ACCESSLOG: true
      TRAEFIK_ACCESSLOG_BUFFERINGSIZE: 100
      TRAEFIK_ACCESSLOG_FILEPATH: /logs/traefik.log
      TRAEFIK_API: true
      TRAEFIK_API_INSECURE: true
      TRAEFIK_API_DASHBOARD: true

      TRAEFIK_PROVIDERS_DOCKER: true
      TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT: false
      TRAEFIK_PROVIDERS_FILE_DIRECTORY: /rules

      TRAEFIK_CERTIFICATESRESOLVERS_letsencrypt: true
      TRAEFIK_CERTIFICATESRESOLVERS_letsencrypt_ACME_EMAIL: $MY_EMAIL
      TRAEFIK_CERTIFICATESRESOLVERS_letsencrypt_ACME_STORAGE: /acme/acme.json
      TRAEFIK_CERTIFICATESRESOLVERS_letsencrypt_ACME_TLSCHALLENGE: true

      TRAEFIK_CERTIFICATESRESOLVERS_duckdns: true
      TRAEFIK_CERTIFICATESRESOLVERS_duckdns_ACME_EMAIL: $MY_EMAIL
      TRAEFIK_CERTIFICATESRESOLVERS_duckdns_ACME_DNSCHALLENGE: true
      TRAEFIK_CERTIFICATESRESOLVERS_duckdns_ACME_STORAGE: /acme/acme2.json
      TRAEFIK_CERTIFICATESRESOLVERS_duckdns_ACME_DNSCHALLENGE_PROVIDER: duckdns
      TRAEFIK_CERTIFICATESRESOLVERS_duckdns_ACME_DNSCHALLENGE_DELAYBEFORECHECK: 0

      TRAEFIK_ENTRYPOINTS_web: true
      TRAEFIK_ENTRYPOINTS_web_ADDRESS: :80
      TRAEFIK_ENTRYPOINTS_web_HTTP_REDIRECTIONS_ENTRYPOINT_TO: websecure

      TRAEFIK_ENTRYPOINTS_websecure: true
      TRAEFIK_ENTRYPOINTS_websecure_ADDRESS: :443
      TRAEFIK_ENTRYPOINTS_websecure_HTTP_TLS: true
      TRAEFIK_ENTRYPOINTS_websecure_HTTP_TLS_CERTRESOLVER: duckdns
      TRAEFIK_ENTRYPOINTS_websecure_HTTP_TLS_DOMAINS_0_MAIN: $DOMAINNAME
      TRAEFIK_ENTRYPOINTS_websecure_HTTP_TLS_DOMAINS_0_SANS: "*.$DOMAINNAME"

      # ldap + ldaps
      TRAEFIK_ENTRYPOINTS_ldap-tcp: true
      TRAEFIK_ENTRYPOINTS_ldap-tcp_ADDRESS: :389/tcp
      TRAEFIK_ENTRYPOINTS_ldap-udp: true
      TRAEFIK_ENTRYPOINTS_ldap-udp_ADDRESS: :389/udp
      TRAEFIK_ENTRYPOINTS_ldaps: true
      TRAEFIK_ENTRYPOINTS_ldaps_ADDRESS: :636/tcp

      TRAEFIK_ENTRYPOINTS_wg-easy: true
      TRAEFIK_ENTRYPOINTS_wg-easy_ADDRESS: :51920/udp
    labels:
      traefik.enable: true
      traefik.http.services.traefik-svc.loadbalancer.server.port: 8080
      traefik.http.routers.traefik-rtr.service: traefik-svc
      traefik.http.routers.traefik-rtr.rule: Host(`traefik.$DOMAINNAME`)
      traefik.http.routers.traefik-rtr.entrypoints: websecure
      traefik.http.routers.traefik-rtr.middlewares: chain-authelia@file
    networks:
      default:
        ipv4_address: $INTERNAL_TRAEFIK_IP
    secrets:
      - duckdns_token

  authelia:
    image: authelia/authelia
    container_name: authelia
    restart: unless-stopped
    ports:
      - "9091:9091"
    volumes:
      - $APPDATA/authelia:/config
    environment:
      TZ: $TZ
      AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE: /run/secrets/authelia_storage_encryption_key
      AUTHELIA_JWT_SECRET_FILE: /run/secrets/authelia_jwt_secret
      AUTHELIA_SESSION_SECRET_FILE: /run/secrets/authelia_session_secret
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_PASSWORD_FILE: /run/secrets/authelia_ldap_password
      AUTHELIA_STORAGE_MYSQL_PASSWORD_FILE: /run/secrets/authelia_storage_mysql_password
      AUTHELIA_SESSION_REDIS_PASSWORD_FILE: /run/secrets/authelia_storage_redis_password
      # AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE: /run/secrets/authelia_notifier_smtp_password
      AUTHELIA_DUO_API_SECRET_KEY_FILE: /run/secrets/authelia_duo_api_secret_key
    labels:
      traefik.enable: true
      traefik.http.routers.authelia-rtr.rule: Host(`login.$DOMAINNAME`)
      traefik.http.routers.authelia-rtr.entrypoints: websecure
      traefik.http.routers.authelia-rtr.middlewares: chain-authelia@file
      traefik.http.routers.authelia-rtr.service: authelia-svc
      traefik.http.services.authelia-svc.loadbalancer.server.port: 9091
    secrets:
      - authelia_storage_encryption_key
      - authelia_jwt_secret
      - authelia_session_secret
      - authelia_ldap_password
      - authelia_storage_mysql_password
      - authelia_storage_redis_password
      # - authelia_notifier_smtp_password
      - authelia_duo_api_secret_key

  wireguard-sts:
    image: linuxserver/wireguard:latest
    container_name: wireguard-sts
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      net.ipv4.ip_forward: 1
      net.ipv4.conf.all.src_valid_mark: 1
    ports:
      - "61920:51820/udp"
      - "61921:51821/tcp"
    volumes:
      - $APPDATA/wireguard-sts:/config
    environment:
      TZ: $TZ
    networks:
      default:
        ipv4_address: 172.10.0.100

  wg-easy:
    image: weejewel/wg-easy
    container_name: wg-easy
    depends_on: [ unbound, pihole ]
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      net.ipv4.ip_forward: 1
      net.ipv4.conf.all.src_valid_mark: 1
    dns:
      - $VPN_PIHOLE_IP # Points to pihole
      - $VPN_UNBOUND_IP # Points to unbound
    ports:
      - "51920:51820/udp"
      - "51821:51821/tcp"
    volumes:
      - $APPDATA/wg-easy/:/etc/wireguard
    environment:
      WG_HOST: wireguard.$DOMAINNAME
      PASSWORD: $WGEASY_PASSWORD
      WG_PORT: 51920
      WG_DEFAULT_ADDRESS: 10.6.0.x
      WG_DEFAULT_DNS: $VPN_PIHOLE_IP
      WG_ALLOWED_IPS: 192.168.10.0/24, 192.168.20.0/24, 10.10.0.0/24
    labels:
      traefik.enable: true
      # admin panel
      traefik.http.routers.wg-easy-rtr.service: wg-easy-svc
      traefik.http.services.wg-easy-svc.loadbalancer.server.port: 51821
      traefik.http.routers.wg-easy-rtr.rule: Host(`wg-easy-admin.$DOMAINNAME`)
      traefik.http.routers.wg-easy-rtr.entrypoints: websecure
      traefik.http.routers.wg-easy-rtr.middlewares: chain-authelia@file
      # udp traffic
      traefik.udp.routers.wg-easy-udp-rtr.entrypoints: wg-easy
      traefik.udp.routers.wg-easy-udp-rtr.service: wg-easy-udp-svc
      traefik.udp.services.wg-easy-udp-svc.loadbalancer.server.port: 51920
    networks:
      vpn:
        ipv4_address: $VPN_WG_EASY_IP

  # Traefik Certs Dumper - Extract LetsEncrypt Certificates - Traefik2 Compatible
  certdumper:
    image: humenius/traefik-certs-dumper:arm64v8
    container_name: certdumper
    depends_on: [ traefik ]
    security_opt:
      - no-new-privileges:true
    volumes:
      - $APPDATA/traefik2/acme:/acme:ro
      - $SHARED/certs:/output:rw
      # - /var/run/docker.sock:/var/run/docker.sock:ro # Only needed if restarting containers
    environment:
      ACME_FILE_PATH: /acme/acme2.json
    network_mode: none

  # DuckDNS - auto update DDNS
  duckdns:
    image: lscr.io/linuxserver/duckdns
    container_name: duckdns
    environment:
      - PUID=$PUID #optional
      - PGID=$PGID
      - TZ=$TZ
      - SUBDOMAINS=$DOMAINNAME
      - TOKEN=$DUCKDNS_TOKEN
      - LOG_FILE=false
    volumes:
      - $APPDATA/duckdns/config:/config
    restart: unless-stopped

  ############################# DATABASES
  # Redis - Key-value Store
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    command: [ "bash", "-c",
               'docker-entrypoint.sh --appendonly yes --requirepass "$$(cat $$AUTHELIA_SESSION_REDIS_PASSWORD_FILE)" --maxmemory 512mb --maxmemory-policy allkeys-lru' ]
    security_opt:
      - no-new-privileges:true
    ports:
      - "6379:6379"
    volumes:
      - $APPDATA/redis/data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      TZ: $TZ
      AUTHELIA_SESSION_REDIS_PASSWORD_FILE: /run/secrets/authelia_storage_redis_password
    secrets:
      - authelia_storage_redis_password

  # MariaDB - SQL relational database
  mariadb:
    image: linuxserver/mariadb:latest
    container_name: mariadb
    restart: unless-stopped
    ports:
      - "3306:3306"
    volumes:
      - $APPDATA/mariadb/config:/config
      - $APPDATA/mariadb/mysql:/var/lib/mysql
    environment:
      TZ: $TZ
      FILE__MYSQL_ROOT_PASSWORD: /run/secrets/mysql_root_password  # Note FILE__ (double underscore)
    secrets:
      - mysql_root_password

  phpmyadmin:
    image: arm64v8/phpmyadmin:latest
    container_name: phpmyadmin
    restart: unless-stopped
    depends_on:
      - mariadb
    ports:
      - "8010:80"
    environment:
      TZ: $TZ
      PMA_HOST: mariadb
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
    labels:
      traefik.enable: true
      traefik.http.services.phpmyadmin-svc.loadbalancer.server.port: 80
      traefik.http.routers.phpmyadmin-rtr.service: phpmyadmin-svc
      traefik.http.routers.phpmyadmin-rtr.rule: Host(`phpmyadmin.$DOMAINNAME`)
      traefik.http.routers.phpmyadmin-rtr.entrypoints: websecure
      traefik.http.routers.phpmyadmin-rtr.middlewares: chain-authelia@file
    secrets:
      - mysql_root_password

  openldap:
    image: tiredofit/openldap
    container_name: openldap
    hostname: ldap.$DOMAINNAME
    depends_on: [ traefik ]
    restart: always
    ports:
      - "389:389"
      - "636:636"
    volumes:
      - $APPDATA/openldap/backup:/data/backup
      - $APPDATA/openldap/data:/var/lib/openldap
      - $APPDATA/openldap/config:/etc/openldap/slapd.d
      - $SHARED/certs/*.$DOMAINNAME:/certs
    environment:
      TZ: $TZ
      HOSTNAME: ldap.$DOMAINNAME
      ORGANIZATION: $LDAP_ORGANIZATION
      LOG_LEVEL: 256
      DOMAIN: $LDAP_DOMAIN
      BASE_DN: $LDAP_BASE_DN

      ADMIN_PASS: $LDAP_ADMIN_PASS
      CONFIG_PASS: $LDAP_CONFIG_PASS
      ENABLE_READONLY_USER: false
      DEBUG_MODE: true

      ENABLE_TLS: true
      TLS_CA_NAME: ca
      TLS_CRT_FILENAME: cert.pem
      TLS_KEY_FILENAME: key.pem
      TLS_ENFORCE: true
      TLS_CIPHER_SUITE: ECDHE-RSA-AES256-SHA384:AES256-SHA256:!RC4:HIGH:!MD5:!EDH:!EXP:!SSLV2:!eNULL
      TLS_VERIFY_CLIENT: try
      SSL_HELPER_PREFIX: ldap

      ENABLE_BACKUP: false
      REMOVE_CONFIG_AFTER_SETUP: true
    labels:
      traefik.enable: true
      # LDAP TCP
      traefik.tcp.routers.ldap-tcp.rule: HostSNI(`ldap.$DOMAINNAME`)
      traefik.tcp.routers.ldap-tcp.entrypoints: ldap-tcp
      traefik.tcp.routers.ldap-tcp.service: ldap-tcp-svc
      traefik.tcp.services.ldap-tcp-svc.loadbalancer.server.port: 389
      # LDAP UDP
      traefik.udp.routers.ldap-udp.entrypoints: ldap-udp
      traefik.udp.routers.ldap-udp.service: ldap-udp-svc
      traefik.udp.services.ldap-udp-svc.loadbalancer.server.port: 389
      # LDAPS
      traefik.tcp.routers.ldaps.rule: HostSNI(`ldap.$DOMAINNAME`)
      traefik.tcp.routers.ldaps.entrypoints: ldaps
      traefik.tcp.routers.ldaps.tls: true
      traefik.tcp.routers.ldaps.tls.passthrough: true
      traefik.tcp.routers.ldaps.tls.certresolver: letsencrypt
      traefik.tcp.routers.ldaps.service: ldaps-svc
      traefik.tcp.services.ldaps-svc.loadbalancer.server.port: 636

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    restart: unless-stopped
    ports:
      - "8086:8086"
    volumes:
      - $APPDATA/influxdb/:/root/.influxdbv2
    environment:
      TZ: $TZ
    labels:
      traefik.enable: true
      traefik.http.services.influxdb-svc.loadbalancer.server.port: 8086
      traefik.http.routers.influxdb-rtr.rule: Host(`influxdb.$DOMAINNAME`)
      traefik.http.routers.influxdb-rtr.entrypoints: websecure
      traefik.http.routers.influxdb-rtr.service: influxdb-svc
      traefik.http.routers.influxdb-rtr.middlewares: chain-authelia@file

  bitwarden:
    image: vaultwarden/server:latest
    container_name: bitwarden
    restart: unless-stopped
    ports:
      - "8050:80"
    volumes:
      - $APPDATA/bitwarden:/data
    environment:
      TZ: $TZ
    labels:
      traefik.enable: true
      traefik.http.services.bitwarden-svc.loadbalancer.server.port: 80
      traefik.http.routers.bitwarden-rtr.service: bitwarden-svc
      traefik.http.routers.bitwarden-rtr.rule: Host(`bitwarden.$DOMAINNAME`)
      traefik.http.routers.bitwarden-rtr.entrypoints: websecure
      traefik.http.routers.bitwarden-rtr.middlewares: chain-authelia@file


  ############################# DNS SERVERS
  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    depends_on: [ unbound ]
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    dns:
      - $VPN_UNBOUND_IP # Points to unbound
      - 9.9.9.9
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "8090:80/tcp"
    volumes:
      - $APPDATA/pihole/pihole/:/etc/pihole/
      - $APPDATA/pihole/dnsmasq.d/:/etc/dnsmasq.d/
    environment:
      TZ: $TZ
      WEBPASSWORD: "" # Password - can be changed later
      ServerIP: $SERVER_IP # Internal IP of pihole
      PIHOLE_DNS_: $VPN_UNBOUND_IP;$VPN_UNBOUND_IP
    networks:
      default:
        ipv4_address: $INTERNAL_PIHOLE_IP
      vpn:
        ipv4_address: $VPN_PIHOLE_IP

  unbound:
    image: mvance/unbound-rpi:1.13.1
    container_name: unbound
    restart: unless-stopped
    volumes:
      - $APPDATA/unbound:/opt/unbound/etc/unbound/
    environment:
      TZ: $TZ
    networks:
      vpn:
        ipv4_address: $VPN_UNBOUND_IP


  ############################# CONTAINER MANAGEMENT
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: unless-stopped
    command: -H unix:///var/run/docker.sock
    ports:
      - "9000:9000"
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $APPDATA/portainer:/data
    environment:
      TZ: $TZ
    labels:
      traefik.enable: true
      traefik.http.services.portainer-svc.loadbalancer.server.port: 9000
      traefik.http.routers.portainer-rtr.service: portainer-svc
      traefik.http.routers.portainer-rtr.rule: Host(`portainer.$DOMAINNAME`)
      traefik.http.routers.portainer-rtr.entrypoints: websecure
      traefik.http.routers.portainer-rtr.middlewares: chain-authelia@file

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: always
    command: --schedule "0 0 3 * * *" --cleanup
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      TZ: $TZ


  ############################# SMART HOME
  homeassistant:
    image: homeassistant/raspberrypi4-homeassistant:stable
    container_name: home-assistant
    restart: always
    privileged: true
    ports:
      - "8123:8123"
    volumes:
      - $APPDATA/homeassistant:/config
    environment:
      TZ: $TZ
    labels:
      traefik.enable: true
      traefik.http.services.ha-svc.loadbalancer.server.port: 8123
      traefik.http.routers.ha-rtr.rule: Host(`homeassistant.$DOMAINNAME`)
      traefik.http.routers.ha-rtr.entrypoints: websecure
      traefik.http.routers.ha-rtr.service: ha-svc
      traefik.http.routers.ha-rtr.middlewares: chain-authelia@file

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - $APPDATA/mosquitto/config:/mosquitto/config
      - $APPDATA/mosquitto/data:/mosquitto/data
      - $APPDATA/mosquitto/log:/mosquitto/log
    environment:
      TZ: $TZ

  tasmoadmin:
    image: raymondmm/tasmoadmin
    container_name: tasmoadmin
    restart: unless-stopped
    profiles:
      - tasmota
    ports:
      - "8020:80"
    volumes:
      - $APPDATA/tasmoadmin:/data
    environment:
      TZ: $TZ

  tasmobackup:
    image: danmed/tasmobackupv1
    container_name: tasmobackup
    restart: unless-stopped
    profiles:
      - tasmota
    depends_on:
      - mariadb
    ports:
      - "8030:80"
    volumes:
      - $APPDATA/tasmobackup:/var/www/html/data
    environment:
      TZ: $TZ
      DBTYPE: mysql
      DBNAME: tasmobackup
      MYSQL_SERVER: mariadb
      MYSQL_USERNAME: tasmobackup
      MYSQL_PASSWORD: $MARIADB_TASMOBACKUP_PASSWORD

  zwavejs2mqtt:
    container_name: zwavejs2mqtt
    image: zwavejs/zwavejs2mqtt:latest
    restart: unless-stopped
    tty: true
    stop_signal: SIGINT
    devices:
      - /dev/serial/by-id/usb-0658_0200-if00:/dev/zwave
    ports:
      - "8091:8091"
      - "3000:3000"
    environment:
      TZ: $TZ
    volumes:
      - $APPDATA/zwavejs2mqtt/:/usr/src/app/store
    labels:
      traefik.enable: true
      traefik.http.services.zwavejs-svc.loadbalancer.server.port: 8091
      traefik.http.routers.zwavejs-rtr.service: zwavejs-svc
      traefik.http.routers.zwavejs-rtr.rule: Host(`zwavejs.$DOMAINNAME`)
      traefik.http.routers.zwavejs-rtr.entrypoints: websecure
      traefik.http.routers.zwavejs-rtr.middlewares: chain-authelia@file

  # private NTP server for Tasmota devices
  ntp:
    image: cturra/ntp:latest
    container_name: ntp
    restart: always
    ports:
      - "123:123/udp"
    read_only: true
    tmpfs:
      - /etc/chrony:rw,mode=1750
      - /run/chrony:rw,mode=1750
      - /var/lib/chrony:rw,mode=1750
    environment:
      TZ: $TZ
      NTP_SERVERS: pl.pool.ntp.org
      LOG_LEVEL: 0


  ############################# TELEMETRY AND MONITORING
  telegraf:
    image: telegraf:latest
    container_name: telegraf
    user: telegraf:995
    restart: unless-stopped
    devices:
      - /dev/vchiq
    ports:
      - "8092:8092"
      - "8094:8094"
      - "8125:8125"
    volumes:
      - $APPDATA/telegraf/:/etc/telegraf/
      - /:/hostfs:ro
      - /opt/vc:/opt/vc
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      TZ: $TZ
      HOST_ETC: /hostfs/etc
      HOST_PROC: /hostfs/proc
      HOST_SYS: /hostfs/sys
      HOST_VAR: /hostfs/var
      HOST_RUN: /hostfs/run
      HOST_MOUNT_PREFIX: /hostfs
      LD_LIBRARY_PATH: /opt/vc/lib

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "4000:3000"
    volumes:
      - $APPDATA/grafana:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: -/B@rtek40/-?
      GF_USERS_ALLOW_SIGN_UP: "false"
      TZ: $TZ
    labels:
      traefik.enable: true
      traefik.http.services.grafana-svc.loadbalancer.server.port: 3000
      traefik.http.routers.grafana-rtr.rule: Host(`grafana.$DOMAINNAME`)
      traefik.http.routers.grafana-rtr.entrypoints: websecure
      traefik.http.routers.grafana-rtr.service: grafana-svc
      traefik.http.routers.grafana-rtr.middlewares: chain-authelia@file

  unifi:
    image: jacobalberty/unifi
    container_name: unifi
    environment:
      TZ: $TZ
      PUID: 1000
      PGID: 1000
    volumes:
      - $APPDATA/unifi:/unifi
    ports:
      - "3478:3478/udp"
      - "8080:8080/tcp"
      - "8443:8443/tcp"
      - "10001:10001/udp"
    restart: unless-stopped


  ############################# WWW SERVICES
  homer:
    image: b4bz/homer:latest
    container_name: homer
    restart: unless-stopped
    ports:
      - "8060:8080"
    volumes:
      - $APPDATA/homer:/www/assets
    environment:
      TZ: $TZ
    labels:
      traefik.enable: true
      traefik.http.services.homer-svc.loadbalancer.server.port: 8080
      traefik.http.routers.homer-rtr.service: homer-svc
      traefik.http.routers.homer-rtr.rule: Host(`home.$DOMAINNAME`)
      traefik.http.routers.homer-rtr.entrypoints: websecure
      traefik.http.routers.homer-rtr.middlewares: chain-authelia@file

  website:
    image: nginx
    container_name: nginx
    profiles:
      - website
    ports:
      - "80:80"
    volumes:
      - $APPDATA/nginx/templates:/etc/nginx/templates
      - $APPDATA/nginx/www/blog/_site/:/usr/share/nginx/html/
    environment:
      NGINX_HOST: $DOMAINNAME
      NGINX_PORT: 80
      TZ: $TZ
    labels:
      traefik.enable: true
      traefik.http.services.nginx-svc.loadbalancer.server.port: 80
      traefik.http.routers.nginx-rtr.service: nginx-svc
      traefik.http.routers.nginx-rtr.rule: Host(`$DOMAINNAME`)
      traefik.http.routers.nginx-rtr.entrypoints: websecure
      traefik.http.routers.grafana-rtr.middlewares: chain-no-auth@file

  whoami:
    image: traefik/whoami
    container_name: whoami
    restart: unless-stopped
    ports:
      - "9010:80"
    environment:
      TZ: $TZ
    labels:
      traefik.enable: true
      traefik.http.services.whoami-svc.loadbalancer.server.port: 80
      traefik.http.routers.whoami-rtr.service: whoami-svc
      traefik.http.routers.whoami-rtr.entrypoints: websecure
      traefik.http.routers.whoami-rtr.rule: Host(`whoami.$DOMAINNAME`)
      traefik.http.routers.whoami-rtr.middlewares: chain-authelia@file
